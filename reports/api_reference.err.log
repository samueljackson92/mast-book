Traceback (most recent call last):
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from string import Template

def do_query(cursor: str = None):
    query = """
    query {
        get_signal_datasets (limit: 3, where: {name: {contains: "AMC"}}, ${cursor}) {
            signal_datasets {
                name
                dimensions
                get_shots (where: {shot_id: {lt: 11700}}){
                    shots {
                        shot_id
                    }
                }
            }
            page_meta {
              next_cursor
              total_items
              total_pages
            }
        }
    }
    """
    template = Template(query)
    query = template.substitute(cursor=f'cursor: "{cursor}"' if cursor is not None else "")
    return requests.post(f'{ENDPOINT_URI}/graphql', json={'query': query})


def iterate_responses():
    cursor = None
    while True:
        response = do_query(cursor)
        payload = response.json() 
        yield payload
        cursor = payload['data']['get_signal_datasets']['page_meta']['next_cursor']
        if cursor is None:
            return

responses = iterate_responses()
print(next(responses))
print(next(responses))
print(next(responses))
------------------

----- stdout -----
{'data': None, 'errors': [{'message': "Cannot query field 'get_signal_datasets' on type 'Query'. Did you mean 'all_signal_datasets'?", 'locations': [{'line': 3, 'column': 9}]}]}
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 41[0m
[1;32m     39[0m responses [38;5;241m=[39m iterate_responses()
[1;32m     40[0m [38;5;28mprint[39m([38;5;28mnext[39m(responses))
[0;32m---> 41[0m [38;5;28mprint[39m([38;5;28;43mnext[39;49m[43m([49m[43mresponses[49m[43m)[49m)
[1;32m     42[0m [38;5;28mprint[39m([38;5;28mnext[39m(responses))

Cell [0;32mIn[5], line 35[0m, in [0;36miterate_responses[0;34m()[0m
[1;32m     33[0m payload [38;5;241m=[39m response[38;5;241m.[39mjson() 
[1;32m     34[0m [38;5;28;01myield[39;00m payload
[0;32m---> 35[0m cursor [38;5;241m=[39m [43mpayload[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mdata[39;49m[38;5;124;43m'[39;49m[43m][49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mget_signal_datasets[39;49m[38;5;124;43m'[39;49m[43m][49m[[38;5;124m'[39m[38;5;124mpage_meta[39m[38;5;124m'[39m][[38;5;124m'[39m[38;5;124mnext_cursor[39m[38;5;124m'[39m]
[1;32m     36[0m [38;5;28;01mif[39;00m cursor [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m     37[0m     [38;5;28;01mreturn[39;00m

[0;31mTypeError[0m: 'NoneType' object is not subscriptable

