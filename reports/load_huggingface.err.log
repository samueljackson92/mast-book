Traceback (most recent call last):
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ubuntu/miniconda3/envs/mast/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
dataset = load_dataset('sljack/mast', 
                       'AMC_PLASMA_CURRENT', 
                       split='full',
                       use_auth_token=True,
                       streaming=True,
                       )

def slice_pulse(item):
    time = item['time']
    msk = (time > 0) & (time < .2)
    item['data'] = item['data'][msk]
    item['time'] = item['time'][msk]
    return item

dataset = dataset.with_format('numpy')
dataset = dataset.map(slice_pulse)

for item in dataset.take(10):
    plt.plot(item['time'], item['data'])
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:980[0m, in [0;36mTCPConnector._wrap_create_connection[0;34m(self, req, timeout, client_error, *args, **kwargs)[0m
[1;32m    979[0m     [38;5;28;01masync[39;00m [38;5;28;01mwith[39;00m ceil_timeout(timeout[38;5;241m.[39msock_connect):
[0;32m--> 980[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_loop[38;5;241m.[39mcreate_connection([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)  [38;5;66;03m# type: ignore[return-value]  # noqa[39;00m
[1;32m    981[0m [38;5;28;01mexcept[39;00m cert_errors [38;5;28;01mas[39;00m exc:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/base_events.py:1085[0m, in [0;36mBaseEventLoop.create_connection[0;34m(self, protocol_factory, host, port, ssl, family, proto, flags, sock, local_addr, server_hostname, ssl_handshake_timeout, ssl_shutdown_timeout, happy_eyeballs_delay, interleave)[0m
[1;32m   1084[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(exceptions) [38;5;241m==[39m [38;5;241m1[39m:
[0;32m-> 1085[0m     [38;5;28;01mraise[39;00m exceptions[[38;5;241m0[39m]
[1;32m   1086[0m [38;5;28;01melse[39;00m:
[1;32m   1087[0m     [38;5;66;03m# If they all have the same str(), raise one.[39;00m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/base_events.py:1069[0m, in [0;36mBaseEventLoop.create_connection[0;34m(self, protocol_factory, host, port, ssl, family, proto, flags, sock, local_addr, server_hostname, ssl_handshake_timeout, ssl_shutdown_timeout, happy_eyeballs_delay, interleave)[0m
[1;32m   1068[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1069[0m     sock [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_connect_sock(
[1;32m   1070[0m         exceptions, addrinfo, laddr_infos)
[1;32m   1071[0m     [38;5;28;01mbreak[39;00m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/base_events.py:973[0m, in [0;36mBaseEventLoop._connect_sock[0;34m(self, exceptions, addr_info, local_addr_infos)[0m
[1;32m    972[0m             [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mno matching local address with [39m[38;5;132;01m{[39;00mfamily[38;5;132;01m=}[39;00m[38;5;124m found[39m[38;5;124m"[39m)
[0;32m--> 973[0m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39msock_connect(sock, address)
[1;32m    974[0m [38;5;28;01mreturn[39;00m sock

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/selector_events.py:634[0m, in [0;36mBaseSelectorEventLoop.sock_connect[0;34m(self, sock, address)[0m
[1;32m    633[0m [38;5;28;01mtry[39;00m:
[0;32m--> 634[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m fut
[1;32m    635[0m [38;5;28;01mfinally[39;00m:
[1;32m    636[0m     [38;5;66;03m# Needed to break cycles when an exception occurs.[39;00m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/selector_events.py:674[0m, in [0;36mBaseSelectorEventLoop._sock_connect_cb[0;34m(self, fut, sock, address)[0m
[1;32m    672[0m     [38;5;28;01mif[39;00m err [38;5;241m!=[39m [38;5;241m0[39m:
[1;32m    673[0m         [38;5;66;03m# Jump to any except clause below.[39;00m
[0;32m--> 674[0m         [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m(err, [38;5;124mf[39m[38;5;124m'[39m[38;5;124mConnect call failed [39m[38;5;132;01m{[39;00maddress[38;5;132;01m}[39;00m[38;5;124m'[39m)
[1;32m    675[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mBlockingIOError[39;00m, [38;5;167;01mInterruptedError[39;00m):
[1;32m    676[0m     [38;5;66;03m# socket is still registered, the callback will be retried later[39;00m

[0;31mConnectionRefusedError[0m: [Errno 111] Connect call failed ('127.0.0.1', 9000)

The above exception was the direct cause of the following exception:

[0;31mClientConnectorError[0m                      Traceback (most recent call last)
File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/httpsession.py:208[0m, in [0;36mAIOHTTPSession.send[0;34m(self, request)[0m
[1;32m    207[0m url [38;5;241m=[39m URL(url, encoded[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m--> 208[0m response [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_session[38;5;241m.[39mrequest(
[1;32m    209[0m     request[38;5;241m.[39mmethod,
[1;32m    210[0m     url[38;5;241m=[39murl,
[1;32m    211[0m     chunked[38;5;241m=[39mchunked,
[1;32m    212[0m     headers[38;5;241m=[39mheaders_,
[1;32m    213[0m     data[38;5;241m=[39mdata,
[1;32m    214[0m     proxy[38;5;241m=[39mproxy_url,
[1;32m    215[0m     proxy_headers[38;5;241m=[39mproxy_headers,
[1;32m    216[0m )
[1;32m    218[0m http_response [38;5;241m=[39m aiobotocore[38;5;241m.[39mawsrequest[38;5;241m.[39mAioAWSResponse(
[1;32m    219[0m     [38;5;28mstr[39m(response[38;5;241m.[39murl), response[38;5;241m.[39mstatus, response[38;5;241m.[39mheaders, response
[1;32m    220[0m )

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/client.py:536[0m, in [0;36mClientSession._request[0;34m(self, method, str_or_url, params, data, json, cookies, headers, skip_auto_headers, auth, allow_redirects, max_redirects, compress, chunked, expect100, raise_for_status, read_until_eof, proxy, proxy_auth, timeout, verify_ssl, fingerprint, ssl_context, ssl, proxy_headers, trace_request_ctx, read_bufsize)[0m
[1;32m    535[0m         [38;5;28;01massert[39;00m [38;5;28mself[39m[38;5;241m.[39m_connector [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[0;32m--> 536[0m         conn [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_connector[38;5;241m.[39mconnect(
[1;32m    537[0m             req, traces[38;5;241m=[39mtraces, timeout[38;5;241m=[39mreal_timeout
[1;32m    538[0m         )
[1;32m    539[0m [38;5;28;01mexcept[39;00m asyncio[38;5;241m.[39mTimeoutError [38;5;28;01mas[39;00m exc:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:540[0m, in [0;36mBaseConnector.connect[0;34m(self, req, traces, timeout)[0m
[1;32m    539[0m [38;5;28;01mtry[39;00m:
[0;32m--> 540[0m     proto [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_create_connection(req, traces, timeout)
[1;32m    541[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_closed:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:901[0m, in [0;36mTCPConnector._create_connection[0;34m(self, req, traces, timeout)[0m
[1;32m    900[0m [38;5;28;01melse[39;00m:
[0;32m--> 901[0m     _, proto [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_create_direct_connection(req, traces, timeout)
[1;32m    903[0m [38;5;28;01mreturn[39;00m proto

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:1206[0m, in [0;36mTCPConnector._create_direct_connection[0;34m(self, req, traces, timeout, client_error)[0m
[1;32m   1205[0m [38;5;28;01massert[39;00m last_exc [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[0;32m-> 1206[0m [38;5;28;01mraise[39;00m last_exc

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:1175[0m, in [0;36mTCPConnector._create_direct_connection[0;34m(self, req, traces, timeout, client_error)[0m
[1;32m   1174[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1175[0m     transp, proto [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_wrap_create_connection(
[1;32m   1176[0m         [38;5;28mself[39m[38;5;241m.[39m_factory,
[1;32m   1177[0m         host,
[1;32m   1178[0m         port,
[1;32m   1179[0m         timeout[38;5;241m=[39mtimeout,
[1;32m   1180[0m         ssl[38;5;241m=[39msslcontext,
[1;32m   1181[0m         family[38;5;241m=[39mhinfo[[38;5;124m"[39m[38;5;124mfamily[39m[38;5;124m"[39m],
[1;32m   1182[0m         proto[38;5;241m=[39mhinfo[[38;5;124m"[39m[38;5;124mproto[39m[38;5;124m"[39m],
[1;32m   1183[0m         flags[38;5;241m=[39mhinfo[[38;5;124m"[39m[38;5;124mflags[39m[38;5;124m"[39m],
[1;32m   1184[0m         server_hostname[38;5;241m=[39mhinfo[[38;5;124m"[39m[38;5;124mhostname[39m[38;5;124m"[39m] [38;5;28;01mif[39;00m sslcontext [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m,
[1;32m   1185[0m         local_addr[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_local_addr,
[1;32m   1186[0m         req[38;5;241m=[39mreq,
[1;32m   1187[0m         client_error[38;5;241m=[39mclient_error,
[1;32m   1188[0m     )
[1;32m   1189[0m [38;5;28;01mexcept[39;00m ClientConnectorError [38;5;28;01mas[39;00m exc:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiohttp/connector.py:988[0m, in [0;36mTCPConnector._wrap_create_connection[0;34m(self, req, timeout, client_error, *args, **kwargs)[0m
[1;32m    987[0m     [38;5;28;01mraise[39;00m
[0;32m--> 988[0m [38;5;28;01mraise[39;00m client_error(req[38;5;241m.[39mconnection_key, exc) [38;5;28;01mfrom[39;00m [38;5;21;01mexc[39;00m

[0;31mClientConnectorError[0m: Cannot connect to host localhost:9000 ssl:default [Connect call failed ('127.0.0.1', 9000)]

During handling of the above exception, another exception occurred:

[0;31mEndpointConnectionError[0m                   Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m dataset [38;5;241m=[39m [43mload_dataset[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43msljack/mast[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[1;32m      2[0m [43m                       [49m[38;5;124;43m'[39;49m[38;5;124;43mAMC_PLASMA_CURRENT[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[1;32m      3[0m [43m                       [49m[43msplit[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mfull[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m      4[0m [43m                       [49m[43muse_auth_token[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m      5[0m [43m                       [49m[43mstreaming[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m      6[0m [43m                       [49m[43m)[49m
[1;32m      8[0m [38;5;28;01mdef[39;00m [38;5;21mslice_pulse[39m(item):
[1;32m      9[0m     time [38;5;241m=[39m item[[38;5;124m'[39m[38;5;124mtime[39m[38;5;124m'[39m]

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/datasets/load.py:1802[0m, in [0;36mload_dataset[0;34m(path, name, data_dir, data_files, split, cache_dir, features, download_config, download_mode, verification_mode, ignore_verifications, keep_in_memory, save_infos, revision, use_auth_token, task, streaming, num_proc, storage_options, **config_kwargs)[0m
[1;32m   1800[0m [38;5;66;03m# Return iterable dataset in case of streaming[39;00m
[1;32m   1801[0m [38;5;28;01mif[39;00m streaming:
[0;32m-> 1802[0m     [38;5;28;01mreturn[39;00m [43mbuilder_instance[49m[38;5;241;43m.[39;49m[43mas_streaming_dataset[49m[43m([49m[43msplit[49m[38;5;241;43m=[39;49m[43msplit[49m[43m)[49m
[1;32m   1804[0m [38;5;66;03m# Some datasets are already processed on the HF google storage[39;00m
[1;32m   1805[0m [38;5;66;03m# Don't try downloading from Google storage for the packaged datasets as text, json, csv or pandas[39;00m
[1;32m   1806[0m try_from_hf_gcs [38;5;241m=[39m path [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m _PACKAGED_DATASETS_MODULES

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/datasets/builder.py:1281[0m, in [0;36mDatasetBuilder.as_streaming_dataset[0;34m(self, split, base_path)[0m
[1;32m   1274[0m dl_manager [38;5;241m=[39m StreamingDownloadManager(
[1;32m   1275[0m     base_path[38;5;241m=[39mbase_path [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39mbase_path,
[1;32m   1276[0m     download_config[38;5;241m=[39mDownloadConfig(use_auth_token[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39muse_auth_token, storage_options[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mstorage_options),
[1;32m   1277[0m     dataset_name[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mname,
[1;32m   1278[0m     data_dir[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mconfig[38;5;241m.[39mdata_dir,
[1;32m   1279[0m )
[1;32m   1280[0m [38;5;28mself[39m[38;5;241m.[39m_check_manual_download(dl_manager)
[0;32m-> 1281[0m splits_generators [38;5;241m=[39m {sg[38;5;241m.[39mname: sg [38;5;28;01mfor[39;00m sg [38;5;129;01min[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_split_generators[49m[43m([49m[43mdl_manager[49m[43m)[49m}
[1;32m   1282[0m [38;5;66;03m# By default, return all splits[39;00m
[1;32m   1283[0m [38;5;28;01mif[39;00m split [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/.cache/huggingface/modules/datasets_modules/datasets/sljack--mast/fd523016bd28ea84b6b8be6be07bced52a160d77062891ad9b41856779a138ac/mast.py:46[0m, in [0;36mMastFusionData._split_generators[0;34m(self, dl_manager)[0m
[1;32m     44[0m s3 [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_s3_file_system()
[1;32m     45[0m store [38;5;241m=[39m s3fs[38;5;241m.[39mS3Map(root[38;5;241m=[39m[38;5;124mf[39m[38;5;124m'[39m[38;5;124mmast/[39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[38;5;124m'[39m, s3[38;5;241m=[39ms3, check[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m---> 46[0m handle [38;5;241m=[39m [43mzarr[49m[38;5;241;43m.[39;49m[43mopen_consolidated[49m[43m([49m[43mstore[49m[43m)[49m
[1;32m     47[0m groups [38;5;241m=[39m [38;5;28mlist[39m(handle[38;5;241m.[39mgroups())
[1;32m     49[0m [38;5;28;01mreturn[39;00m [
[1;32m     50[0m     datasets[38;5;241m.[39mSplitGenerator(
[1;32m     51[0m         name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mfull[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m     55[0m     ),
[1;32m     56[0m ]

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/zarr/convenience.py:1299[0m, in [0;36mopen_consolidated[0;34m(store, metadata_key, mode, **kwargs)[0m
[1;32m   1296[0m         metadata_key [38;5;241m=[39m [38;5;124m'[39m[38;5;124mmeta/root/consolidated/[39m[38;5;124m'[39m [38;5;241m+[39m metadata_key
[1;32m   1298[0m [38;5;66;03m# setup metadata store[39;00m
[0;32m-> 1299[0m meta_store [38;5;241m=[39m [43mConsolidatedStoreClass[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43mmetadata_key[49m[38;5;241;43m=[39;49m[43mmetadata_key[49m[43m)[49m
[1;32m   1301[0m [38;5;66;03m# pass through[39;00m
[1;32m   1302[0m chunk_store [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mchunk_store[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m) [38;5;129;01mor[39;00m store

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/zarr/storage.py:2890[0m, in [0;36mConsolidatedMetadataStore.__init__[0;34m(self, store, metadata_key)[0m
[1;32m   2887[0m [38;5;28mself[39m[38;5;241m.[39mstore [38;5;241m=[39m Store[38;5;241m.[39m_ensure_store(store)
[1;32m   2889[0m [38;5;66;03m# retrieve consolidated metadata[39;00m
[0;32m-> 2890[0m meta [38;5;241m=[39m json_loads([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstore[49m[43m[[49m[43mmetadata_key[49m[43m][49m)
[1;32m   2892[0m [38;5;66;03m# check format of consolidated metadata[39;00m
[1;32m   2893[0m consolidated_format [38;5;241m=[39m meta[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mzarr_consolidated_format[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/zarr/storage.py:1397[0m, in [0;36mFSStore.__getitem__[0;34m(self, key)[0m
[1;32m   1395[0m key [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_normalize_key(key)
[1;32m   1396[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1397[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmap[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m   1398[0m [38;5;28;01mexcept[39;00m [38;5;28mself[39m[38;5;241m.[39mexceptions [38;5;28;01mas[39;00m e:
[1;32m   1399[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/fsspec/mapping.py:143[0m, in [0;36mFSMap.__getitem__[0;34m(self, key, default)[0m
[1;32m    141[0m k [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_key_to_str(key)
[1;32m    142[0m [38;5;28;01mtry[39;00m:
[0;32m--> 143[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfs[49m[38;5;241;43m.[39;49m[43mcat[49m[43m([49m[43mk[49m[43m)[49m
[1;32m    144[0m [38;5;28;01mexcept[39;00m [38;5;28mself[39m[38;5;241m.[39mmissing_exceptions:
[1;32m    145[0m     [38;5;28;01mif[39;00m default [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/fsspec/asyn.py:121[0m, in [0;36msync_wrapper.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    118[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m    119[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    120[0m     [38;5;28mself[39m [38;5;241m=[39m obj [38;5;129;01mor[39;00m args[[38;5;241m0[39m]
[0;32m--> 121[0m     [38;5;28;01mreturn[39;00m [43msync[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mloop[49m[43m,[49m[43m [49m[43mfunc[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/fsspec/asyn.py:106[0m, in [0;36msync[0;34m(loop, func, timeout, *args, **kwargs)[0m
[1;32m    104[0m     [38;5;28;01mraise[39;00m FSTimeoutError [38;5;28;01mfrom[39;00m [38;5;21;01mreturn_result[39;00m
[1;32m    105[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[0;32m--> 106[0m     [38;5;28;01mraise[39;00m return_result
[1;32m    107[0m [38;5;28;01melse[39;00m:
[1;32m    108[0m     [38;5;28;01mreturn[39;00m return_result

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/fsspec/asyn.py:61[0m, in [0;36m_runner[0;34m(event, coro, result, timeout)[0m
[1;32m     59[0m     coro [38;5;241m=[39m asyncio[38;5;241m.[39mwait_for(coro, timeout[38;5;241m=[39mtimeout)
[1;32m     60[0m [38;5;28;01mtry[39;00m:
[0;32m---> 61[0m     result[[38;5;241m0[39m] [38;5;241m=[39m [38;5;28;01mawait[39;00m coro
[1;32m     62[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[1;32m     63[0m     result[[38;5;241m0[39m] [38;5;241m=[39m ex

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/fsspec/asyn.py:433[0m, in [0;36mAsyncFileSystem._cat[0;34m(self, path, recursive, on_error, batch_size, **kwargs)[0m
[1;32m    431[0m     ex [38;5;241m=[39m [38;5;28mnext[39m([38;5;28mfilter[39m(is_exception, out), [38;5;28;01mFalse[39;00m)
[1;32m    432[0m     [38;5;28;01mif[39;00m ex:
[0;32m--> 433[0m         [38;5;28;01mraise[39;00m ex
[1;32m    434[0m [38;5;28;01mif[39;00m (
[1;32m    435[0m     [38;5;28mlen[39m(paths) [38;5;241m>[39m [38;5;241m1[39m
[1;32m    436[0m     [38;5;129;01mor[39;00m [38;5;28misinstance[39m(path, [38;5;28mlist[39m)
[1;32m    437[0m     [38;5;129;01mor[39;00m paths[[38;5;241m0[39m] [38;5;241m!=[39m [38;5;28mself[39m[38;5;241m.[39m_strip_protocol(path)
[1;32m    438[0m ):
[1;32m    439[0m     [38;5;28;01mreturn[39;00m {
[1;32m    440[0m         k: v
[1;32m    441[0m         [38;5;28;01mfor[39;00m k, v [38;5;129;01min[39;00m [38;5;28mzip[39m(paths, out)
[1;32m    442[0m         [38;5;28;01mif[39;00m on_error [38;5;241m!=[39m [38;5;124m"[39m[38;5;124momit[39m[38;5;124m"[39m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m is_exception(v)
[1;32m    443[0m     }

File [0;32m~/miniconda3/envs/mast/lib/python3.11/asyncio/tasks.py:442[0m, in [0;36mwait_for[0;34m(fut, timeout)[0m
[1;32m    439[0m loop [38;5;241m=[39m events[38;5;241m.[39mget_running_loop()
[1;32m    441[0m [38;5;28;01mif[39;00m timeout [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 442[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m fut
[1;32m    444[0m [38;5;28;01mif[39;00m timeout [38;5;241m<[39m[38;5;241m=[39m [38;5;241m0[39m:
[1;32m    445[0m     fut [38;5;241m=[39m ensure_future(fut, loop[38;5;241m=[39mloop)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:1071[0m, in [0;36mS3FileSystem._cat_file[0;34m(self, path, version_id, start, end)[0m
[1;32m   1068[0m     [38;5;28;01mfinally[39;00m:
[1;32m   1069[0m         resp[[38;5;124m"[39m[38;5;124mBody[39m[38;5;124m"[39m][38;5;241m.[39mclose()
[0;32m-> 1071[0m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(_call_and_read, retries[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mretries)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:140[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    138[0m         err [38;5;241m=[39m e
[1;32m    139[0m err [38;5;241m=[39m translate_boto_error(err)
[0;32m--> 140[0m [38;5;28;01mraise[39;00m err

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:113[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    111[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(retries):
[1;32m    112[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 113[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    114[0m     [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:
[1;32m    115[0m         err [38;5;241m=[39m e

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:1058[0m, in [0;36mS3FileSystem._cat_file.<locals>._call_and_read[0;34m()[0m
[1;32m   1057[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_call_and_read[39m():
[0;32m-> 1058[0m     resp [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_call_s3(
[1;32m   1059[0m         [38;5;124m"[39m[38;5;124mget_object[39m[38;5;124m"[39m,
[1;32m   1060[0m         Bucket[38;5;241m=[39mbucket,
[1;32m   1061[0m         Key[38;5;241m=[39mkey,
[1;32m   1062[0m         [38;5;241m*[39m[38;5;241m*[39mversion_id_kw(version_id [38;5;129;01mor[39;00m vers),
[1;32m   1063[0m         [38;5;241m*[39m[38;5;241m*[39mhead,
[1;32m   1064[0m         [38;5;241m*[39m[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39mreq_kw,
[1;32m   1065[0m     )
[1;32m   1066[0m     [38;5;28;01mtry[39;00m:
[1;32m   1067[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m resp[[38;5;124m"[39m[38;5;124mBody[39m[38;5;124m"[39m][38;5;241m.[39mread()

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:348[0m, in [0;36mS3FileSystem._call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    346[0m logger[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mCALL: [39m[38;5;132;01m%s[39;00m[38;5;124m - [39m[38;5;132;01m%s[39;00m[38;5;124m - [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m, method[38;5;241m.[39m[38;5;18m__name__[39m, akwarglist, kw2)
[1;32m    347[0m additional_kwargs [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_s3_method_kwargs(method, [38;5;241m*[39makwarglist, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m--> 348[0m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(
[1;32m    349[0m     method, kwargs[38;5;241m=[39madditional_kwargs, retries[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mretries
[1;32m    350[0m )

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:140[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    138[0m         err [38;5;241m=[39m e
[1;32m    139[0m err [38;5;241m=[39m translate_boto_error(err)
[0;32m--> 140[0m [38;5;28;01mraise[39;00m err

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/s3fs/core.py:113[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    111[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(retries):
[1;32m    112[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 113[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    114[0m     [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:
[1;32m    115[0m         err [38;5;241m=[39m e

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/client.py:361[0m, in [0;36mAioBaseClient._make_api_call[0;34m(self, operation_name, api_params)[0m
[1;32m    359[0m [38;5;28;01melse[39;00m:
[1;32m    360[0m     apply_request_checksum(request_dict)
[0;32m--> 361[0m     http, parsed_response [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_request(
[1;32m    362[0m         operation_model, request_dict, request_context
[1;32m    363[0m     )
[1;32m    365[0m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mmeta[38;5;241m.[39mevents[38;5;241m.[39memit(
[1;32m    366[0m     [38;5;124m'[39m[38;5;124mafter-call.[39m[38;5;132;01m{service_id}[39;00m[38;5;124m.[39m[38;5;132;01m{operation_name}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m    367[0m         service_id[38;5;241m=[39mservice_id, operation_name[38;5;241m=[39moperation_name
[0;32m   (...)[0m
[1;32m    372[0m     context[38;5;241m=[39mrequest_context,
[1;32m    373[0m )
[1;32m    375[0m [38;5;28;01mif[39;00m http[38;5;241m.[39mstatus_code [38;5;241m>[39m[38;5;241m=[39m [38;5;241m300[39m:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/client.py:386[0m, in [0;36mAioBaseClient._make_request[0;34m(self, operation_model, request_dict, request_context)[0m
[1;32m    382[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_make_request[39m(
[1;32m    383[0m     [38;5;28mself[39m, operation_model, request_dict, request_context
[1;32m    384[0m ):
[1;32m    385[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 386[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_endpoint[38;5;241m.[39mmake_request(
[1;32m    387[0m             operation_model, request_dict
[1;32m    388[0m         )
[1;32m    389[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:
[1;32m    390[0m         [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mmeta[38;5;241m.[39mevents[38;5;241m.[39memit(
[1;32m    391[0m             [38;5;124m'[39m[38;5;124mafter-call-error.[39m[38;5;132;01m{service_id}[39;00m[38;5;124m.[39m[38;5;132;01m{operation_name}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m    392[0m                 service_id[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_service_model[38;5;241m.[39mservice_id[38;5;241m.[39mhyphenize(),
[0;32m   (...)[0m
[1;32m    396[0m             context[38;5;241m=[39mrequest_context,
[1;32m    397[0m         )

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/endpoint.py:100[0m, in [0;36mAioEndpoint._send_request[0;34m(self, request_dict, operation_model)[0m
[1;32m     96[0m request [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mcreate_request(request_dict, operation_model)
[1;32m     97[0m success_response, exception [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_response(
[1;32m     98[0m     request, operation_model, context
[1;32m     99[0m )
[0;32m--> 100[0m [38;5;28;01mwhile[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_needs_retry(
[1;32m    101[0m     attempts,
[1;32m    102[0m     operation_model,
[1;32m    103[0m     request_dict,
[1;32m    104[0m     success_response,
[1;32m    105[0m     exception,
[1;32m    106[0m ):
[1;32m    107[0m     attempts [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[1;32m    108[0m     [38;5;28mself[39m[38;5;241m.[39m_update_retries_context(context, attempts, success_response)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/endpoint.py:262[0m, in [0;36mAioEndpoint._needs_retry[0;34m(self, attempts, operation_model, request_dict, response, caught_exception)[0m
[1;32m    260[0m service_id [38;5;241m=[39m operation_model[38;5;241m.[39mservice_model[38;5;241m.[39mservice_id[38;5;241m.[39mhyphenize()
[1;32m    261[0m event_name [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124mneeds-retry.[39m[38;5;132;01m{[39;00mservice_id[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;132;01m{[39;00moperation_model[38;5;241m.[39mname[38;5;132;01m}[39;00m[38;5;124m"[39m
[0;32m--> 262[0m responses [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_event_emitter[38;5;241m.[39memit(
[1;32m    263[0m     event_name,
[1;32m    264[0m     response[38;5;241m=[39mresponse,
[1;32m    265[0m     endpoint[38;5;241m=[39m[38;5;28mself[39m,
[1;32m    266[0m     operation[38;5;241m=[39moperation_model,
[1;32m    267[0m     attempts[38;5;241m=[39mattempts,
[1;32m    268[0m     caught_exception[38;5;241m=[39mcaught_exception,
[1;32m    269[0m     request_dict[38;5;241m=[39mrequest_dict,
[1;32m    270[0m )
[1;32m    271[0m handler_response [38;5;241m=[39m first_non_none_response(responses)
[1;32m    272[0m [38;5;28;01mif[39;00m handler_response [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/hooks.py:66[0m, in [0;36mAioHierarchicalEmitter._emit[0;34m(self, event_name, kwargs, stop_on_response)[0m
[1;32m     63[0m logger[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mEvent [39m[38;5;132;01m%s[39;00m[38;5;124m: calling handler [39m[38;5;132;01m%s[39;00m[38;5;124m'[39m, event_name, handler)
[1;32m     65[0m [38;5;66;03m# Await the handler if its a coroutine.[39;00m
[0;32m---> 66[0m response [38;5;241m=[39m [38;5;28;01mawait[39;00m resolve_awaitable(handler([38;5;241m*[39m[38;5;241m*[39mkwargs))
[1;32m     67[0m responses[38;5;241m.[39mappend((handler, response))
[1;32m     68[0m [38;5;28;01mif[39;00m stop_on_response [38;5;129;01mand[39;00m response [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/_helpers.py:15[0m, in [0;36mresolve_awaitable[0;34m(obj)[0m
[1;32m     13[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mresolve_awaitable[39m(obj):
[1;32m     14[0m     [38;5;28;01mif[39;00m inspect[38;5;241m.[39misawaitable(obj):
[0;32m---> 15[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m obj
[1;32m     17[0m     [38;5;28;01mreturn[39;00m obj

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/retryhandler.py:107[0m, in [0;36mAioRetryHandler._call[0;34m(self, attempts, response, caught_exception, **kwargs)[0m
[1;32m    104[0m     retries_context [38;5;241m=[39m kwargs[[38;5;124m'[39m[38;5;124mrequest_dict[39m[38;5;124m'[39m][[38;5;124m'[39m[38;5;124mcontext[39m[38;5;124m'[39m][38;5;241m.[39mget([38;5;124m'[39m[38;5;124mretries[39m[38;5;124m'[39m)
[1;32m    105[0m     checker_kwargs[38;5;241m.[39mupdate({[38;5;124m'[39m[38;5;124mretries_context[39m[38;5;124m'[39m: retries_context})
[0;32m--> 107[0m [38;5;28;01mif[39;00m [38;5;28;01mawait[39;00m resolve_awaitable([38;5;28mself[39m[38;5;241m.[39m_checker([38;5;241m*[39m[38;5;241m*[39mchecker_kwargs)):
[1;32m    108[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_action(attempts[38;5;241m=[39mattempts)
[1;32m    109[0m     logger[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mRetry needed, action of: [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m, result)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/_helpers.py:15[0m, in [0;36mresolve_awaitable[0;34m(obj)[0m
[1;32m     13[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mresolve_awaitable[39m(obj):
[1;32m     14[0m     [38;5;28;01mif[39;00m inspect[38;5;241m.[39misawaitable(obj):
[0;32m---> 15[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m obj
[1;32m     17[0m     [38;5;28;01mreturn[39;00m obj

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/retryhandler.py:126[0m, in [0;36mAioMaxAttemptsDecorator._call[0;34m(self, attempt_number, response, caught_exception, retries_context)[0m
[1;32m    121[0m [38;5;28;01mif[39;00m retries_context:
[1;32m    122[0m     retries_context[[38;5;124m'[39m[38;5;124mmax[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28mmax[39m(
[1;32m    123[0m         retries_context[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mmax[39m[38;5;124m'[39m, [38;5;241m0[39m), [38;5;28mself[39m[38;5;241m.[39m_max_attempts
[1;32m    124[0m     )
[0;32m--> 126[0m should_retry [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_should_retry(
[1;32m    127[0m     attempt_number, response, caught_exception
[1;32m    128[0m )
[1;32m    129[0m [38;5;28;01mif[39;00m should_retry:
[1;32m    130[0m     [38;5;28;01mif[39;00m attempt_number [38;5;241m>[39m[38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_max_attempts:
[1;32m    131[0m         [38;5;66;03m# explicitly set MaxAttemptsReached[39;00m

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/retryhandler.py:165[0m, in [0;36mAioMaxAttemptsDecorator._should_retry[0;34m(self, attempt_number, response, caught_exception)[0m
[1;32m    161[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m
[1;32m    162[0m [38;5;28;01melse[39;00m:
[1;32m    163[0m     [38;5;66;03m# If we've exceeded the max attempts we just let the exception[39;00m
[1;32m    164[0m     [38;5;66;03m# propagate if one has occurred.[39;00m
[0;32m--> 165[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m resolve_awaitable(
[1;32m    166[0m         [38;5;28mself[39m[38;5;241m.[39m_checker(attempt_number, response, caught_exception)
[1;32m    167[0m     )

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/_helpers.py:15[0m, in [0;36mresolve_awaitable[0;34m(obj)[0m
[1;32m     13[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mresolve_awaitable[39m(obj):
[1;32m     14[0m     [38;5;28;01mif[39;00m inspect[38;5;241m.[39misawaitable(obj):
[0;32m---> 15[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m obj
[1;32m     17[0m     [38;5;28;01mreturn[39;00m obj

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/retryhandler.py:174[0m, in [0;36mAioMultiChecker._call[0;34m(self, attempt_number, response, caught_exception)[0m
[1;32m    171[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_call[39m([38;5;28mself[39m, attempt_number, response, caught_exception):
[1;32m    172[0m     [38;5;28;01mfor[39;00m checker [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_checkers:
[1;32m    173[0m         checker_response [38;5;241m=[39m [38;5;28;01mawait[39;00m resolve_awaitable(
[0;32m--> 174[0m             [43mchecker[49m[43m([49m[43mattempt_number[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcaught_exception[49m[43m)[49m
[1;32m    175[0m         )
[1;32m    176[0m         [38;5;28;01mif[39;00m checker_response:
[1;32m    177[0m             [38;5;28;01mreturn[39;00m checker_response

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/botocore/retryhandler.py:247[0m, in [0;36mBaseChecker.__call__[0;34m(self, attempt_number, response, caught_exception)[0m
[1;32m    245[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_check_response(attempt_number, response)
[1;32m    246[0m [38;5;28;01melif[39;00m caught_exception [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 247[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_caught_exception[49m[43m([49m
[1;32m    248[0m [43m        [49m[43mattempt_number[49m[43m,[49m[43m [49m[43mcaught_exception[49m
[1;32m    249[0m [43m    [49m[43m)[49m
[1;32m    250[0m [38;5;28;01melse[39;00m:
[1;32m    251[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mBoth response and caught_exception are None.[39m[38;5;124m"[39m)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/botocore/retryhandler.py:416[0m, in [0;36mExceptionRaiser._check_caught_exception[0;34m(self, attempt_number, caught_exception)[0m
[1;32m    408[0m [38;5;28;01mdef[39;00m [38;5;21m_check_caught_exception[39m([38;5;28mself[39m, attempt_number, caught_exception):
[1;32m    409[0m     [38;5;66;03m# This is implementation specific, but this class is useful by[39;00m
[1;32m    410[0m     [38;5;66;03m# coordinating with the MaxAttemptsDecorator.[39;00m
[0;32m   (...)[0m
[1;32m    414[0m     [38;5;66;03m# the MaxAttemptsDecorator is not interested in retrying the exception[39;00m
[1;32m    415[0m     [38;5;66;03m# then this exception just propogates out past the retry code.[39;00m
[0;32m--> 416[0m     [38;5;28;01mraise[39;00m caught_exception

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/endpoint.py:181[0m, in [0;36mAioEndpoint._do_get_response[0;34m(self, request, operation_model, context)[0m
[1;32m    179[0m     http_response [38;5;241m=[39m first_non_none_response(responses)
[1;32m    180[0m     [38;5;28;01mif[39;00m http_response [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 181[0m         http_response [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_send(request)
[1;32m    182[0m [38;5;28;01mexcept[39;00m HTTPClientError [38;5;28;01mas[39;00m e:
[1;32m    183[0m     [38;5;28;01mreturn[39;00m ([38;5;28;01mNone[39;00m, e)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/endpoint.py:285[0m, in [0;36mAioEndpoint._send[0;34m(self, request)[0m
[1;32m    284[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_send[39m([38;5;28mself[39m, request):
[0;32m--> 285[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mhttp_session[38;5;241m.[39msend(request)

File [0;32m~/miniconda3/envs/mast/lib/python3.11/site-packages/aiobotocore/httpsession.py:253[0m, in [0;36mAIOHTTPSession.send[0;34m(self, request)[0m
[1;32m    247[0m         [38;5;28;01mraise[39;00m ReadTimeoutError(endpoint_url[38;5;241m=[39mrequest[38;5;241m.[39murl, error[38;5;241m=[39me)
[1;32m    248[0m [38;5;28;01mexcept[39;00m (
[1;32m    249[0m     ClientConnectorError,
[1;32m    250[0m     ClientConnectionError,
[1;32m    251[0m     socket[38;5;241m.[39mgaierror,
[1;32m    252[0m ) [38;5;28;01mas[39;00m e:
[0;32m--> 253[0m     [38;5;28;01mraise[39;00m EndpointConnectionError(endpoint_url[38;5;241m=[39mrequest[38;5;241m.[39murl, error[38;5;241m=[39me)
[1;32m    254[0m [38;5;28;01mexcept[39;00m asyncio[38;5;241m.[39mTimeoutError [38;5;28;01mas[39;00m e:
[1;32m    255[0m     [38;5;28;01mraise[39;00m ReadTimeoutError(endpoint_url[38;5;241m=[39mrequest[38;5;241m.[39murl, error[38;5;241m=[39me)

[0;31mEndpointConnectionError[0m: Could not connect to the endpoint URL: "http://localhost:9000/mast/amc_test.zarr/.zmetadata"

